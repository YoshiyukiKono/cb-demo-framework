#@ Deploy the couchmovies demo
#======================= ./module/set_up_k8s.mod ===============================
#======================= ./module/deploy_crd.mod ===============================
KUBECTL~create -f ./artifacts/cbao/crd.yaml --save-config

#======================= ./module/deploy_admission_controller.mod ===============================
EXEC~bin/cbopcfg --no-operator | kubectl create -f -

#======================= ./module/build_ns.mod ===============================
# PROMPT~Enter the namespace~NS~couchbase
SET~NS~couchmovies
# PROMPT~Enter the working directory to use~WORKDIR~.
SET~WORKDIR~./work/couchmovies
CODE~check_make_dir.ksh~{{WORKDIR}}
TEMPLATE~namespace.template~{{WORKDIR}}~yaml~NSTEMP
KUBECTL~create -f {{NSTEMP}}

#======================= ./module/deploy_administrator_defaults.mod ===============================
# PROMPT~Enter the namespace to deploy into~NS~default
SET~NS~couchmovies
KUBECTL~create -f ./artifacts/cbao/cb-example-auth.yaml -n {{NS}} --save-config

#======================= ./module/deploy_cb_operator.mod ===============================
# PROMPT~Enter namespace to deploy into~NS~default
SET~NS~couchmovies
EXEC~bin/cbopcfg --no-admission --namespace {{NS}} | kubectl create -n {{NS}} -f -

#======================= ./module/deploy_cb_cluster.mod ===============================
# PROMPT~Enter working director~WORKDIR~./work
SET~WORKDIR~./artifacts/config
# PROMPT~Enter name of configuration yaml~CONFFILE~cb-cluster.yaml
SET~CONFFILE~couchmovies-cluster.yaml
# PROMPT~Enter namespace to deploy into~NS~default
SET~NS~couchmovies
KUBECTL~create -f {{WORKDIR}}/{{CONFFILE}} -n {{NS}} --save-config
#======================= ./module/wait_for_pods.mod ===============================
# PROMPT~Enter name prefix of cluster or pods to monitor (i.e. cb-example, couchmart, etc...)~CLUSTER~cb-example
SET~CLUSTER~cb-example
# PROMPT~Enter namespace of cluster~NS~default
SET~NS~couchmovies
# PROMPT~Enter expected number of pods in cluster~PODS~3
SET~PODS~3
# PROMPT~Enter number of retries to check~RETRIES~10
SET~RETRIES~10
# PROMPT~Enter number of seconds to wait between retries~SLEEP~30
SET~SLEEP~30
CODE~wait_till_cluster_ready.ksh~{{CLUSTER}},{{PODS}},{{NS}},{{RETRIES}},{{SLEEP}}
#======================= ./module/config_bucket_and_deploy.mod ===============================
# PROMPT~Enter working directory~WORKDIR~./work
SET~WORKDIR~./work/couchmovies
# PROMPT~Enter namespace where cluster is located~NS~default
SET~NS~couchmovies
# PROMPT~Enter bucket name~BUCKET~default
SET~BUCKET~moviedata
#SET~BUCKET2~customers
#SET~BUCKET3~transfer
# PROMPT~Enter CB Cluster to create bucket in~CLUSTER~cb-example
SET~CLUSTER~cb-example
# PROMPT~Enter bucket memory quota in Mi~MEMORYQUOTA~256
SET~MEMORYQUOTA~128
# PROMPT~Enter number of replicas~REPLICAS~1
SET~REPLICAS~1
# PROMPT~Enter eviction policy (valueOnly | fullEviction)~EVICTIONPOLICY~valueOnly
SET~EVICTIONPOLICY~valueOnly
# PROMPT~Enter conflict resolution (lww | seqno)~CONFLICT~seqno
SET~CONFLICT~seqno
# PROMPT~Enable flush (true | false)~FLUSH~false
SET~FLUSH~true
#
TEMPLATE~couchmovies_bucket.template~{{WORKDIR}}~yaml~BUCKETTEMP
KUBECTL~create -f {{BUCKETTEMP}} -n {{NS}} --save-config
#======================= ./module/sleep.mod ===============================
# PROMPT~Enter time to sleep in seconds~SLEEP~30
SET~SLEEP~60
MESSAGE~Sleeping for {{SLEEP}} seconds
EXEC~sleep {{SLEEP}}
#======================= ./module/port_forward_pod.mod ===============================
# PROMPT~Enter name prefix of the pod to connect to~PODPFX~cb-example
SET~PODPFX~cb-example
# PROMPT~Enter namespace of your pod~NS~default
SET~NS~couchmovies
CODE~get_pod_by_nameprefix.ksh~{{PODPFX}},{{NS}}~POD
# PROMPT~Enter local port to use~LPORT~8091
SET~LPORT~8091
# PROMPT~Enter remote port to use~RPORT~8091
SET~RPORT~8091
MESSAGE~Running port-forward {{POD}} {{LPORT}}:{{RPORT}} -n {{NS}} hit ctrl-c to exit...
KUBECTL~port-forward {{POD}} {{LPORT}}:{{RPORT}} -n {{NS}} > /dev/null 2>&1 &
#======================= ./module/deploy_couchmart.mod ===============================
# PROMPT~Enter the namespace to deploy couchmart into~CMNS~default
SET~CMNS~couchmovies
# PROMPT~Enter the Couchbase cluster name to connect to~CMCLUSTER~cb-example
SET~CMCLUSTER~cb-example
# PROMPT~Enter the namespace where the CB Cluster is deployed~NS~default
SET~NS~couchmovies
SET~CLUSTER~couchmovies
SET~PODS~1
SET~RETRIES~10
SET~SLEEP~30
CODE~get_pod_by_nameprefix.ksh~{{CMCLUSTER}},{{NS}}~CBPOD
SET~CONNSTR~{{CBPOD}}.{{CMCLUSTER}}.{{NS}}.svc
# PROMPT~Enter the work directory to use for intermediate files~WORKDIR~./work
SET~WORKDIR~./work/couchmovies
TEMPLATE~couchmovies.template~{{WORKDIR}}~yaml~COUCHMOVIES
KUBECTL~create -f {{WORKDIR}}/couchmovies.yaml -n {{CMNS}}
#CODE~wait_till_cluster_ready.ksh~{{CLUSTER}},{{PODS}},{{CMNS}},{{RETRIES}},{{SLEEP}}
CODE~get_pod_by_nameprefix.ksh~{{CLUSTER}},{{CMNS}}~CMPOD
# PROMPT~Enter the local port to forward for couchmart~LPORT~8888
SET~LPORT~8000
MESSAGE~Running port-forward {{CMPOD}} {{LPORT}}:8000 -n {{CMNS}} hit ctrl-c to exit...
KUBECTL~port-forward {{CMPOD}} {{LPORT}}:8000 -n {{CMNS}} > /dev/null 2>&1 &
SET~LPORT~8080
MESSAGE~Running port-forward {{CMPOD}} {{LPORT}}:8080 -n {{CMNS}} hit ctrl-c to exit...
KUBECTL~port-forward {{CMPOD}} {{LPORT}}:8080 -n {{CMNS}} > /dev/null 2>&1 &
