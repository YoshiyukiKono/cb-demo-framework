#@ This is a sample demo for Wael
#======================= ./module/set_up_k8s.mod ===============================
#======================= ./module/deploy_crd.mod ===============================
KUBECTL~create -f ./artifacts/cbao/crd.yaml --save-config

#======================= ./module/deploy_admission_controller.mod ===============================
EXEC~bin/cbopcfg --no-operator | kubectl create -f -

#======================= ./module/build_ns.mod ===============================
# PROMPT~Enter the namespace~NS~couchbase
SET~NS~wael
# PROMPT~Enter the working directory to use~WORKDIR~.
SET~WORKDIR~./work/wael
CODE~check_make_dir.ksh~{{WORKDIR}}
TEMPLATE~namespace.template~{{WORKDIR}}~yaml~NSTEMP
KUBECTL~create -f {{NSTEMP}}

#======================= ./module/deploy_administrator_defaults.mod ===============================
# PROMPT~Enter the namespace to deploy into~NS~default
SET~NS~wael
KUBECTL~create -f ./artifacts/cbao/cb-example-auth.yaml -n {{NS}} --save-config

#======================= ./module/deploy_cb_operator.mod ===============================
# PROMPT~Enter namespace to deploy into~NS~default
SET~NS~wael
EXEC~bin/cbopcfg --no-admission --namespace {{NS}} | kubectl create -n {{NS}} -f -

#======================= ./module/deploy_cb_cluster.mod ===============================
# PROMPT~Enter working director~WORKDIR~./work
SET~WORKDIR~./work/wael
# PROMPT~Enter name of configuration yaml~CONFFILE~cb-cluster.yaml
SET~CONFFILE~cb-cluster.yaml
# PROMPT~Enter namespace to deploy into~NS~default
SET~NS~wael
KUBECTL~create -f {{WORKDIR}}/{{CONFFILE}} -n {{NS}} --save-config
#======================= ./module/wait_for_pods.mod ===============================
# PROMPT~Enter name prefix of cluster or pods to monitor (i.e. cb-example, couchmart, etc...)~CLUSTER~cb-example
SET~CLUSTER~cb-example
# PROMPT~Enter namespace of cluster~NS~default
SET~NS~wael
# PROMPT~Enter expected number of pods in cluster~PODS~3
SET~PODS~3
# PROMPT~Enter number of retries to check~RETRIES~10
SET~RETRIES~10
# PROMPT~Enter number of seconds to wait between retries~SLEEP~30
SET~SLEEP~30
CODE~wait_till_cluster_ready.ksh~{{CLUSTER}},{{PODS}},{{NS}},{{RETRIES}},{{SLEEP}}
#======================= ./module/config_bucket_and_deploy.mod ===============================
# PROMPT~Enter working directory~WORKDIR~./work
SET~WORKDIR~./work/wael
# PROMPT~Enter namespace where cluster is located~NS~default
SET~NS~wael
# PROMPT~Enter bucket name~BUCKET~default
SET~BUCKET~test
# PROMPT~Enter CB Cluster to create bucket in~CLUSTER~cb-example
SET~CLUSTER~cb-example
# PROMPT~Enter bucket memory quota in Mi~MEMORYQUOTA~256
SET~MEMORYQUOTA~256
# PROMPT~Enter number of replicas~REPLICAS~1
SET~REPLICAS~1
# PROMPT~Enter eviction policy (valueOnly | fullEviction)~EVICTIONPOLICY~valueOnly
SET~EVICTIONPOLICY~valueOnly
# PROMPT~Enter conflict resolution (lww | seqno)~CONFLICT~seqno
SET~CONFLICT~seqno
# PROMPT~Enable flush (true | false)~FLUSH~false
SET~FLUSH~true
TEMPLATE~couchbase_bucket.template~{{WORKDIR}}~yaml~BUCKETTEMP
KUBECTL~create -f {{BUCKETTEMP}} -n {{NS}} --save-config
#======================= ./module/sleep.mod ===============================
# PROMPT~Enter time to sleep in seconds~SLEEP~30
SET~SLEEP~60
MESSAGE~Sleeping for {{SLEEP}} seconds
EXEC~sleep {{SLEEP}}
#======================= ./module/cbq_file.mod ===============================
# PROMPT~Enter data location you want to load (Local path)~FILEPATH~
SET~FILEPATH~./work
# PROMPT~Enter data file you want to load (Local file)~FILE~
SET~FILE~test_query.txt
# PROMPT~Enter namespace of your cluster~NS~default
SET~NS~wael
# PROMPT~Enter name of the pod to load to~PODPFX~cb-example-0
SET~PODPFX~cb-example-0
CODE~get_pod_by_nameprefix.ksh~{{PODPFX}},{{NS}}~POD
# PROMPT~Enter username~USER~Administrator
SET~USER~Administrator
# PROMPT~Enter password~PASS~password
SET~PASS~password
KUBECTL~cp -n {{NS}} {{FILEPATH}}/{{FILE}} {{POD}}:/tmp
KUBEEXEC~{{POD}} -n {{NS}} -- bash -c "cbq -e couchbase://localhost -u {{USER}} -p {{PASS}} -f /tmp/{{FILE}}"
#======================= ./module/load_csv_file.mod ===============================
# PROMPT~Enter data location you want to load (Local path)~FILEPATH~
SET~FILEPATH~./work
# PROMPT~Enter data file you want to load (Local file)~FILE~
SET~FILE~test.csv
# PROMPT~Enter name prefix of the pod to load from~PODPFX~cb-example-0
SET~PODPFX~cb-example-0
# PROMPT~Enter namespace of your cluster~NS~default
SET~NS~wael
CODE~get_pod_by_nameprefix.ksh~{{PODPFX}},{{NS}}~POD
# PROMPT~Enter bucket name~BUCKET~default
SET~BUCKET~test
# PROMPT~Enter username~USER~Administrator
SET~USER~Administrator
# PROMPT~Enter password~PASS~password
SET~PASS~password
# PROMPT~Enter key generation pattern (#MONO_INC#, #UUID#, %attribute%, etc...); enclose in ''~KEY~'#UUID#'
SET~KEY~'#UUID#'
# PROMPT~Enter the number of threads~THREADS~1
SET~THREADS~1
# PROMPT~Enter the delimiter of the dataset~FORMAT~,
SET~FORMAT~,
KUBECTL~cp -n {{NS}} {{FILEPATH}}/{{FILE}} {{POD}}:/tmp
KUBEEXEC~{{POD}} -n {{NS}} -- bash -c "cbimport csv -c couchbase://localhost -u {{USER}} -p {{PASS}} -b {{BUCKET}} --field-separator {{FORMAT}} -d file:///tmp/{{FILE}} -g {{KEY}} -t {{THREADS}}"
#======================= ./module/load_json_file.mod ===============================
# PROMPT~Enter data location you want to load (Local path)~FILEPATH~
SET~FILEPATH~./work
# PROMPT~Enter data file you want to load (Local file)~FILE~
SET~FILE~test.json
# PROMPT~Enter namespace of your cluster~NS~default
SET~NS~wael
# PROMPT~Enter name of the pod to load to~PODPFX~cb-example-0
SET~PODPFX~cb-example-0
CODE~get_pod_by_nameprefix.ksh~{{PODPFX}},{{NS}}~POD
# PROMPT~Enter bucket name~BUCKET~default
SET~BUCKET~test
# PROMPT~Enter username~USER~Administrator
SET~USER~Administrator
# PROMPT~Enter password~PASS~password
SET~PASS~password
# PROMPT~Enter key generation pattern (#MONO_INC#, #UUID#, %attribute%, etc...); enclose in ''~KEY~'#UUID#'
SET~KEY~'#UUID#'
# PROMPT~Enter the number of threads~THREADS~1
SET~THREADS~1
# PROMPT~Enter the format of the dataset (lines, list)~FORMAT~lines
SET~FORMAT~lines
KUBECTL~cp -n {{NS}} {{FILEPATH}}/{{FILE}} {{POD}}:/tmp
KUBEEXEC~{{POD}} -n {{NS}} -- bash -c "cbimport json -c couchbase://localhost -u {{USER}} -p {{PASS}} -b {{BUCKET}} -f {{FORMAT}} -d file:///tmp/{{FILE}} -g "{{KEY}}" -t {{THREADS}}"
#======================= ./module/port_forward_pod.mod ===============================
# PROMPT~Enter name prefix of the pod to connect to~PODPFX~cb-example
SET~PODPFX~cb-example
# PROMPT~Enter namespace of your pod~NS~default
SET~NS~wael
CODE~get_pod_by_nameprefix.ksh~{{PODPFX}},{{NS}}~POD
# PROMPT~Enter local port to use~LPORT~8091
SET~LPORT~8091
# PROMPT~Enter remote port to use~RPORT~8091
SET~RPORT~8091
MESSAGE~Running port-forward {{POD}} {{LPORT}}:{{RPORT}} -n {{NS}} hit ctrl-c to exit...
KUBECTL~port-forward {{POD}} {{LPORT}}:{{RPORT}} -n {{NS}} > /dev/null 2>&1 &
