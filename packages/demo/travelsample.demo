#@ This demo uses the travel sample application and sample bucket
#======================= ./packages/demo/set_up_k8s.mod ===============================
#======================= ./packages/demo/deploy_crd.mod ===============================
KUBECTL~create -f ./artifacts/cbao/crd.yaml --save-config

#======================= ./packages/demo/deploy_admission_controller.mod ===============================
EXEC~bin/cbopcfg --no-operator | kubectl create -f -

#======================= ./packages/demo/build_ns.mod ===============================
# PROMPT~Enter the namespace~NS~couchbase
SET~NS~couchbase
# PROMPT~Enter the working directory to use~WORKDIR~.
SET~WORKDIR~./work/travel
CODE~check_make_dir.ksh~{{WORKDIR}}
TEMPLATE~namespace.template~{{WORKDIR}}~yaml~NSTEMP
KUBECTL~create -f {{NSTEMP}}

#======================= ./packages/demo/deploy_administrator_defaults.mod ===============================
# PROMPT~Enter the namespace to deploy into~NS~default
SET~NS~couchbase
KUBECTL~create -f ./artifacts/cbao/cb-example-auth.yaml -n {{NS}} --save-config

#======================= ./packages/demo/deploy_cb_operator.mod ===============================
# PROMPT~Enter namespace to deploy into~NS~default
SET~NS~couchbase
EXEC~bin/cbopcfg --no-admission --namespace {{NS}} | kubectl create -n {{NS}} -f -

#======================= ./packages/demo/deploy_cb_cluster.mod ===============================
# PROMPT~Enter working director~WORKDIR~./work
SET~WORKDIR~./artifacts/config
# PROMPT~Enter name of configuration yaml~CONFFILE~cb-cluster.yaml
SET~CONFFILE~travel-cluster.yaml
# PROMPT~Enter namespace to deploy into~NS~default
SET~NS~couchbase
KUBECTL~create -f {{WORKDIR}}/{{CONFFILE}} -n {{NS}} --save-config
#======================= ./packages/demo/wait_for_pods.mod ===============================
# PROMPT~Enter name prefix of cluster or pods to monitor (i.e. cb-example, couchmart, etc...)~CLUSTER~cb-example
SET~CLUSTER~cb-example
# PROMPT~Enter namespace of cluster~NS~default
SET~NS~couchbase
# PROMPT~Enter expected number of pods in cluster~PODS~3
SET~PODS~3
# PROMPT~Enter number of retries to check~RETRIES~10
SET~RETRIES~10
# PROMPT~Enter number of seconds to wait between retries~SLEEP~30
SET~SLEEP~30
CODE~wait_till_cluster_ready.ksh~{{CLUSTER}},{{PODS}},{{NS}},{{RETRIES}},{{SLEEP}}
#======================= ./packages/demo/curl_command.mod ===============================
MESSAGE~Sleeping for 30 seconds
EXEC~sleep 30
# PROMPT~Enter name prefix of the pod to execute from~PODPFX~cb-example-0
SET~PODPFX~cb-example-0
# PROMPT~Enter namespace of your cluster~NS~default
SET~NS~couchbase
CODE~get_pod_by_nameprefix.ksh~{{PODPFX}},{{NS}}~POD
# PROMPT~Enter curl command~CCMD~
SET~CCMD~curl -X POST -u Administrator:password http://localhost:8091/sampleBuckets/install -d '["travel-sample"]'
MESSAGE~Executing command {{CCMD}} on {{POD}}
KUBEEXEC~{{POD}} -n {{NS}} -- bash -c "{{CCMD}}"
#======================= ./packages/demo/port_forward_pod.mod ===============================
# PROMPT~Enter name prefix of the pod to connect to~PODPFX~cb-example
SET~PODPFX~cb-example
# PROMPT~Enter namespace of your pod~NS~default
SET~NS~couchbase
CODE~get_pod_by_nameprefix.ksh~{{PODPFX}},{{NS}}~POD
# PROMPT~Enter local port to use~LPORT~8091
SET~LPORT~8091
# PROMPT~Enter remote port to use~RPORT~8091
SET~RPORT~8091
MESSAGE~Running port-forward {{POD}} {{LPORT}}:{{RPORT}} -n {{NS}} hit ctrl-c to exit...
KUBECTL~port-forward {{POD}} {{LPORT}}:{{RPORT}} -n {{NS}} > /dev/null 2>&1 &

#==================== SET COMMAND =========================
SET~NAME~travelsample
#==================== SET COMMAND =========================
SET~IMAGE~cbck/try-cb-python:latest
#======================= ./packages/demo/generic_template.mod ===============================
# PROMPT~Enter working directory~WORKDIR~./work
SET~WORKDIR~./work/travel
# PROMPT~Enter name of template file located in "templates" directory~TFILE~
SET~TFILE~generic-deployment.template
# PROMPT~Enter the file extenstion to use for generated file~EXTENSION~yaml
SET~EXTENSION~yaml
MESSAGE~The location of the generated file will be stored in the variable TFILE
TEMPLATE~{{TFILE}}~{{WORKDIR}}~{{EXTENSION}}~TFILE

#======================= ./packages/demo/deploy_pod.mod ===============================
# PROMPT~Enter working directory~WORKDIR~./work
SET~WORKDIR~./work/travel
# PROMPT~Enter namespace where cluster is located~NS~default
SET~NS~couchbase
# PROMPT~Enter name of configuration file~FILE~couchbase_bucket.yaml
SET~FILE~generic-deployment.yaml
KUBECTL~create -f {{WORKDIR}}/{{FILE}} -n {{NS}} --save-config
#======================= ./packages/demo/wait_for_pods.mod ===============================
# PROMPT~Enter name prefix of cluster or pods to monitor (i.e. cb-example, couchmart, etc...)~CLUSTER~cb-example
SET~CLUSTER~travelsample
# PROMPT~Enter namespace of cluster~NS~default
SET~NS~couchbase
# PROMPT~Enter expected number of pods in cluster~PODS~3
SET~PODS~1
# PROMPT~Enter number of retries to check~RETRIES~10
SET~RETRIES~10
# PROMPT~Enter number of seconds to wait between retries~SLEEP~30
SET~SLEEP~30
CODE~wait_till_cluster_ready.ksh~{{CLUSTER}},{{PODS}},{{NS}},{{RETRIES}},{{SLEEP}}
#======================= ./packages/demo/get_pod_by_prefix.mod ===============================
# PROMPT~Enter the name prefix of pod~PREFIX~cb-example
SET~PREFIX~travelsample
# PROMPT~Enter the namespace of the pod~NS~default
SET~NS~couchbase
CODE~get_pod_by_nameprefix.ksh~{{PREFIX}},{{NS}}~POD
MESSAGE~pod [{{POD}}] detected...
#======================= ./packages/demo/get_pod_by_svc.mod ===============================
SET~PFILE~./lib/demo/get_pod_by_svc.py
MESSAGE~Enter the following arguments:
MESSAGE~-ns namespace [default]
MESSAGE~-p prefix [cb-example]
MESSAGE~-s service [kv, index, n1ql, fts, analytics, eventing]
MESSAGE~-sn indicates that the short name of the pod should be returned
# PROMPT~Enter any additional args~ARGS~-ns default -p cb-example -s kv
SET~ARGS~-ns couchbase -p cb-example -s kv
CODE~wrapper_python.ksh~{{PFILE}},{{ARGS}}~RETPOD
MESSAGE~Detected pod[{{RETPOD}}]

#======================= ./packages/demo/exec_pod_cmd.mod ===============================
# PROMPT~Enter name prefix of the pod to execute from~PODPFX~cb-example-0
SET~PODPFX~travelsample
# PROMPT~Enter namespace of your cluster~NS~default
SET~NS~couchbase
CODE~get_pod_by_nameprefix.ksh~{{PODPFX}},{{NS}}~POD
# PROMPT~Enter command~CCMD~
SET~CCMD~sed -i.bkup '27s#.*#CONNSTR = \\\"couchbase:\/\/{{RETPOD}}\\\"#' /try-cb-python/travel.py
MESSAGE~Executing {{CCMD}} on {{POD}}
KUBEEXEC~{{POD}} -n {{NS}} -- bash -c "{{CCMD}}"

#======================= ./packages/demo/curl_command.mod ===============================
# PROMPT~Enter name prefix of the pod to execute from~PODPFX~cb-example-0
SET~PODPFX~travelsample
# PROMPT~Enter namespace of your cluster~NS~default
SET~NS~couchbase
CODE~get_pod_by_nameprefix.ksh~{{PODPFX}},{{NS}}~POD
# PROMPT~Enter curl command~CCMD~
SET~CCMD~curl -u Administrator:password -XPUT http://{{RETPOD}}:8094/api/index/hotels -H 'content-type: application/json' -d @/try-cb-python/fts-hotels-index.json
MESSAGE~Executing command {{CCMD}} on {{POD}}
KUBEEXEC~{{POD}} -n {{NS}} -- bash -c "{{CCMD}}"
#======================= ./packages/demo/exec_pod_cmd.mod ===============================
# PROMPT~Enter name prefix of the pod to execute from~PODPFX~cb-example-0
SET~PODPFX~travelsample
# PROMPT~Enter namespace of your cluster~NS~default
SET~NS~couchbase
CODE~get_pod_by_nameprefix.ksh~{{PODPFX}},{{NS}}~POD
# PROMPT~Enter command~CCMD~
SET~CCMD~nohup python /try-cb-python/travel.py 2>&1 > /try-cb-python/travel.log &
MESSAGE~Executing {{CCMD}} on {{POD}}
KUBEEXEC~{{POD}} -n {{NS}} -- bash -c "{{CCMD}}"
#======================= ./packages/demo/port_forward_pod.mod ===============================
# PROMPT~Enter name prefix of the pod to connect to~PODPFX~cb-example
SET~PODPFX~travelsample
# PROMPT~Enter namespace of your pod~NS~default
SET~NS~couchbase
CODE~get_pod_by_nameprefix.ksh~{{PODPFX}},{{NS}}~POD
# PROMPT~Enter local port to use~LPORT~8091
SET~LPORT~8080
# PROMPT~Enter remote port to use~RPORT~8091
SET~RPORT~8080
MESSAGE~Running port-forward {{POD}} {{LPORT}}:{{RPORT}} -n {{NS}} hit ctrl-c to exit...
KUBECTL~port-forward {{POD}} {{LPORT}}:{{RPORT}} -n {{NS}} > /dev/null 2>&1 &
